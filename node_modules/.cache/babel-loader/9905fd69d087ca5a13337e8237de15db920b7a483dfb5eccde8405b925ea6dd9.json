{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  all: [],\n  popular: [],\n  loading: false,\n  error: null\n};\nexport const fetchAllProducts = createAsyncThunk('products/fetchAllProducts', async () => {\n  const response = await fetch('../../services/products');\n  const data = await response.json();\n  return data;\n});\nexport const fetchPopularProducts = createAsyncThunk('products/fetchPopularProducts', async () => {\n  const response = await fetch('../../services/products');\n  const productsData = await response.json();\n  return productsData.filter(product => product.popular);\n});\nexport const productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchAllProducts.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchAllProducts.fulfilled, (state, action) => {\n      state.loading = false;\n      state.error = null;\n      state.all = action.payload;\n    }).addCase(fetchAllProducts.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || 'Failed to fetch products';\n    }).addCase(fetchPopularProducts.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchPopularProducts.fulfilled, (state, action) => {\n      state.loading = false;\n      state.error = null;\n      state.popular = action.payload;\n    }).addCase(fetchPopularProducts.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message || 'Failed to fetch popular products';\n    });\n  }\n});\nexport const {\n  actions,\n  reducer\n} = productsSlice;\nexport default reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","all","popular","loading","error","fetchAllProducts","response","fetch","data","json","fetchPopularProducts","productsData","filter","product","productsSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","actions","reducer"],"sources":["/Users/sevilcherepaha/Downloads/GitHub/sultan /src/store/slices/productsSlice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { Product } from '../../services/products';\n\ninterface ProductsState {\n  all: Product[];\n  popular: Product[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: ProductsState = {\n  all: [],\n  popular: [],\n  loading: false,\n  error: null\n}\n\nexport const fetchAllProducts = createAsyncThunk(\n  'products/fetchAllProducts',\n  async () => {\n    const response = await fetch('../../services/products');\n    const data = await response.json();\n    return data;\n  }\n);\n\nexport const fetchPopularProducts = createAsyncThunk(\n    'products/fetchPopularProducts',\n    async () => {\n      const response = await fetch('../../services/products');\n      const productsData = await response.json();\n      return productsData.filter((product: Product) => product.popular);\n    }\n  );\n  \n\nexport const productsSlice = createSlice({\n  name: 'products',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchAllProducts.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchAllProducts.fulfilled, (state, action) => {\n        state.loading = false;\n        state.error = null;\n        state.all = action.payload;\n      })\n      .addCase(fetchAllProducts.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || 'Failed to fetch products';\n      })\n      .addCase(fetchPopularProducts.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchPopularProducts.fulfilled, (state, action) => {\n        state.loading = false;\n        state.error = null;\n        state.popular = action.payload;\n      })\n      .addCase(fetchPopularProducts.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || 'Failed to fetch popular products';\n      });\n  },\n});\n\nexport const { actions, reducer } = productsSlice;\nexport default reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAUhE,MAAMC,YAA2B,GAAG;EAClCC,GAAG,EAAE,EAAE;EACPC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGP,gBAAgB,CAC9C,2BAA2B,EAC3B,YAAY;EACV,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyB,CAAC;EACvD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAClC,OAAOD,IAAI;AACb,CAAC,CACF;AAED,OAAO,MAAME,oBAAoB,GAAGZ,gBAAgB,CAChD,+BAA+B,EAC/B,YAAY;EACV,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyB,CAAC;EACvD,MAAMI,YAAY,GAAG,MAAML,QAAQ,CAACG,IAAI,EAAE;EAC1C,OAAOE,YAAY,CAACC,MAAM,CAAEC,OAAgB,IAAKA,OAAO,CAACX,OAAO,CAAC;AACnE,CAAC,CACF;AAGH,OAAO,MAAMY,aAAa,GAAGf,WAAW,CAAC;EACvCgB,IAAI,EAAE,UAAU;EAChBf,YAAY;EACZgB,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACd,gBAAgB,CAACe,OAAO,EAAGC,KAAK,IAAK;MAC5CA,KAAK,CAAClB,OAAO,GAAG,IAAI;MACpBkB,KAAK,CAACjB,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDe,OAAO,CAACd,gBAAgB,CAACiB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACtDF,KAAK,CAAClB,OAAO,GAAG,KAAK;MACrBkB,KAAK,CAACjB,KAAK,GAAG,IAAI;MAClBiB,KAAK,CAACpB,GAAG,GAAGsB,MAAM,CAACC,OAAO;IAC5B,CAAC,CAAC,CACDL,OAAO,CAACd,gBAAgB,CAACoB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACrDF,KAAK,CAAClB,OAAO,GAAG,KAAK;MACrBkB,KAAK,CAACjB,KAAK,GAAGmB,MAAM,CAACnB,KAAK,CAACsB,OAAO,IAAI,0BAA0B;IAClE,CAAC,CAAC,CACDP,OAAO,CAACT,oBAAoB,CAACU,OAAO,EAAGC,KAAK,IAAK;MAChDA,KAAK,CAAClB,OAAO,GAAG,IAAI;MACpBkB,KAAK,CAACjB,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDe,OAAO,CAACT,oBAAoB,CAACY,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC1DF,KAAK,CAAClB,OAAO,GAAG,KAAK;MACrBkB,KAAK,CAACjB,KAAK,GAAG,IAAI;MAClBiB,KAAK,CAACnB,OAAO,GAAGqB,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDL,OAAO,CAACT,oBAAoB,CAACe,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACzDF,KAAK,CAAClB,OAAO,GAAG,KAAK;MACrBkB,KAAK,CAACjB,KAAK,GAAGmB,MAAM,CAACnB,KAAK,CAACsB,OAAO,IAAI,kCAAkC;IAC1E,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEC,OAAO;EAAEC;AAAQ,CAAC,GAAGd,aAAa;AACjD,eAAec,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}